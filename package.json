{
  "name": "client",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@date-io/date-fns": "^2.14.0",
    "@emotion/react": "^11.9.0",
    "@emotion/styled": "^11.8.1",
    "@mui/material": "^5.8.1",
    "@mui/styled-engine-sc": "^5.8.0",
    "@mui/x-date-pickers": "^5.0.0-alpha.4",
    "@testing-library/jest-dom": "^5.12.0",
    "@testing-library/react": "^11.2.6",
    "@testing-library/user-event": "^12.8.3",
    "@types/date-fns": "^2.6.0",
    "bootstrap": "^5.1.3",
    "cors": "^2.8.5",
    "date-fns": "^2.28.0",
    "express": "^4.18.1",
    "react": "^17.0.2",
    "react-bootstrap": "^2.3.1",
    "react-dom": "^17.0.2",
    "react-icons": "^4.3.1",
    "react-router-dom": "^6.3.0",
    "react-scripts": "4.0.3",
    "styled-components": "^5.3.5",
    "web-vitals": "^1.1.2"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test --watchAll=false --detectOpenHandles",
    "eject": "react-scripts eject",
    "install-backend": "cd backend && npm install",
    "install-both": "npm install & npm run install-backend",
    "backend": "cd backend && node index.js",
    "start-both": "npm run backend & npm start"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "description": "As of now, you have completed Project Week 3 and should now have a fully functional React Application with the ability to navigate to an **About me** page and a **Home** page hosting the Todo List Application. The Todo List Application itself allows users to provide a task w/ a due date, create a list w/ those user inputs to be displayed on a webpage, mark those task as complete and remove them from the list, and etc. Currently, all data which is essentially our tasks in this case lives in the front-end (Todo List Application). Everytime we refresh the page or restart our application that data is lost. This is where the backend component comes into play. The backend component will allow us to communicate to our front-end component (Todo List Application) using express and save our data inside a database (json file) where data will not be lost after a page refresh or application restart. For Project Week 4, you will go thru the process of initializing and creating a backend component, using express to communicate with the front-end component, and using axios to communicate with backend component.",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/2022-IBM-Accelerate-SW-Track/to-do-list_week4-jasminemcy.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/2022-IBM-Accelerate-SW-Track/to-do-list_week4-jasminemcy/issues"
  },
  "homepage": "https://github.com/2022-IBM-Accelerate-SW-Track/to-do-list_week4-jasminemcy#readme"
}
